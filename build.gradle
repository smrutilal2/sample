buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2" }
    }

    dependencies {
        classpath group: 'com.bmuschko', name: 'gradle-clover-plugin', version: '2.2.1'
        classpath group: 'com.github.ben-manes', name: 'gradle-versions-plugin', version: '0.20.0'
        classpath group: 'me.champeau.gradle', name: 'jmh-gradle-plugin', version: '0.4.8'
        classpath group: 'org.owasp', name: 'dependency-check-gradle', version: '4.0.0.1'
        classpath group: 'gradle.plugin.com.github.spotbugs', name: 'spotbugs-gradle-plugin', version: '1.6.6'
        classpath group: 'org.ajoberstar.reckon', name: 'reckon-gradle', version: '0.9.0'
        classpath group: 'org.ajoberstar', name: 'gradle-git-publish', version: '2.0.0'
//        classpath 'com.github.spotbugs:spotbugs-annotations:3.1.9'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.bmuschko.clover'
apply plugin: 'org.ajoberstar.reckon'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.github.spotbugs'
apply plugin: 'org.ajoberstar.git-publish'
apply plugin: 'idea'


group = 'io.ultrabrew'
description = """Sample Library"""
sourceCompatibility = 1.8

reckon {
    scopeFromProp()
    snapshotFromProp()
}

dependencies {
    compileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.9'

    testCompile group: 'org.jmockit', name: 'jmockit', version: '1.44'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.2'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.2'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    clover group: 'org.openclover', name: 'clover', version: '4.2.1'

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.8.0'

    archives group: 'org.apache.maven.wagon', name: 'wagon-ssh-external', version: '3.2.0'
}

repositories {
    jcenter()
}

test {
    useJUnitPlatform()

    // Required as of JMockIt 1.42
    // https://jmockit.github.io/tutorial/Introduction.html#runningTests
    doFirst {
        jvmArgs "-javaagent:${classpath.find { it.name.contains("jmockit") }.absolutePath}"
    }

    testLogging {
        events 'passed', 'skipped', 'failed'
    }

    reports {
        html.enabled = true
    }
}

clover {
    targetPercentage = '100.000%'
    report {
        html = true
        testResultsDir = project.tasks.getByName('test').reports.junitXml.destination
        testResultsInclude = 'TEST-*.xml'
    }
}

check.dependsOn cloverGenerateReport, dependencyCheckAnalyze

dependencyCheck {
    skipConfigurations = ['clover']
    format = 'ALL'
}

spotbugs {
    sourceSets = [sourceSets.main]
}

spotbugsMain.reports {
    xml.enabled = false
    html.enabled = true
}

spotbugsTest.reports {
    xml.enabled = false
    html.enabled = true
}

uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.archives
            repository(url: "https://api.bintray.com/maven/ultrabrew/m2") {
            }
        }
    }
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourceJar
    archives javadocJar
}

javadoc.options {
    noQualifiers << 'java.*'
}
